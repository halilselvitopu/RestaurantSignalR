@model List<ResultBasketDto>
@{
    Layout = null;
    decimal totalPrice = Model?.Sum(x => x.Price * x.ProductCount) ?? 0;
    decimal kdv = totalPrice / 10;
    decimal totalPriceWithKdv = totalPrice + kdv;
}

<!DOCTYPE html>
<html>
@await Component.InvokeAsync("UILayoutHeadComponent")

<body class="sub_page">
    @await Component.InvokeAsync("MenuNavbarComponent")

    <div class="container-fluid mt-5">
        <div class="row px-xl-5">
            <div class="col-12">
                <nav class="breadcrumb bg-dark mb-30">
                    <a class="breadcrumb-item text-white" href="/Default/Index">Ana Sayfa</a>
                    <a class="breadcrumb-item text-white" href="/Menu/Index">Menü</a>
                    <span class="breadcrumb-item active">Sepetiniz</span>
                </nav>
            </div>
        </div>

        <div class="row px-xl-5">
            <div class="col-lg-8 table-responsive mb-5">
                @if (Model != null && Model.Any())
                {
                    <table class="table table-light table-borderless table-hover text-center mb-0">
                        <thead class="thead-dark">
                            <tr>
                                <th>#</th>
                                <th>Ürün Adı</th>
                                <th>Adet</th>
                                <th>Fiyat</th>
                                <th>Toplam</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody class="align-middle">
                            @foreach (var item in Model.Select((value, index) => new { value, index }))
                            {
                                var totalPriceInList = item.value.ProductCount * item.value.Price;
                                <tr id="basket-row-@item.value.Id">
                                    <td class="align-middle">@(item.index + 1)</td>
                                    <td class="align-middle">@item.value.Product.Name</td>
                                    <td class="align-middle">
                                        <div class="input-group quantity" style="width: 100px;">
                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-primary btn-minus" data-basket-id="@item.value.Id">
                                                    <i class="fa fa-minus"></i>
                                                </button>
                                            </div>
                                            <input type="text" class="form-control form-control-sm bg-light text-center quantity-input"
                                                   value="@item.value.ProductCount" readonly>
                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-primary btn-plus" data-basket-id="@item.value.Id">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="align-middle">@item.value.Price.ToString("N2")₺</td>
                                    <td class="align-middle total-price">@totalPriceInList.ToString("N2")₺</td>
                                    <td class="align-middle">
                                        <button class="btn btn-sm btn-danger btn-delete" data-basket-id="@item.value.Id">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-info">
                        Sepetinizde ürün bulunmamaktadır.
                    </div>
                }
            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title position-relative text-uppercase mb-3">
                            <span class="bg-warning pr-3">Sepet Özeti</span>
                        </h5>
                        <div class="bg-light p-3">
                            <div class="border-bottom pb-2">
                                <div class="d-flex justify-content-between mb-3">
                                    <h6>Toplam Tutar</h6>
                                    <h6><span id="total-price">@totalPrice.ToString("N2")</span>₺</h6>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <h6>KDV (%10)</h6>
                                    <h6><span id="kdv">@kdv.ToString("N2")</span>₺</h6>
                                </div>
                            </div>
                            <div class="pt-2">
                                <div class="d-flex justify-content-between mt-2">
                                    <h5>Genel Toplam</h5>
                                    <h5><span id="total-price-with-kdv">@totalPriceWithKdv.ToString("N2")</span>₺</h5>
                                </div>
                                <button id="btn-complete-order" class="btn btn-warning btn-block font-weight-bold my-3">
                                    Siparişi Tamamla
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @await Component.InvokeAsync("UILayoutFooterComponent")
    @await Component.InvokeAsync("UILayoutScriptsComponent")

    <script>
        $(document).ready(function () {
           
            $('.btn-plus, .btn-minus').click(function () {
                const basketId = $(this).data('basket-id');
                let quantityInput = $(this).closest('.quantity').find('.quantity-input');
                let currentQuantity = parseInt(quantityInput.val());

                if ($(this).hasClass('btn-plus')) {
                    currentQuantity++;
                } else if (currentQuantity > 1) {
                    currentQuantity--;
                }

                updateBasketQuantity(basketId, currentQuantity);
            });

            
            $('.btn-delete').click(function () {
                const basketId = $(this).data('basket-id');
                if (confirm('Ürünü sepetten silmek istediğinize emin misiniz?')) {
                    window.location.href = `/Basket/DeleteBasket/${basketId}`;
                }
            });

            function updateBasketQuantity(basketId, quantity) {
                $.ajax({
                    url: '/Basket/UpdateQuantity',
                    type: 'POST',
                    data: { basketId: basketId, quantity: quantity },
                    success: function (response) {
                        if (response.success) {
                            window.location.reload();
                        } else {
                            alert(response.message || 'Güncelleme başarısız');
                        }
                    },
                    error: function () {
                        alert('Bir hata oluştu');
                    }
                });
            }
        });
    </script>
</body>
</html>